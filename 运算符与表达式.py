"""
表达式：由变量、常量和运算符组成的式子
阅读表达式：
功能：
值：
"""

"""
算术运算符和算数运算表达式

算术运算符
+   -   *   /   %（取余）   **(求幂）   //（取整）
算数运算表达式
a = 3
1 + 1  2*3  a/3
功能：进行相关符号的数学运算,不会改变变量的值
值：相关的数学运算结果
"""
num1 = 5
num2 = 3
print(num1 + num2)
print(num1 - num2)
print(num1 * num2)
print(num1 / num2)
print(num1 % num2)
print(num1 ** num2)
print(num1 // num2)


"""
赋值运算符和赋值运算表达式
赋值运算符：=
赋值运算表达式：
格式：变量 = 表达式
功能：计算了等号右侧“表达式”的值，并赋值给变量
值：赋值结束后变量的值

"""
"""
复合运算符
+=   a += b---a = a + b
-=   a -= b   a = a - b
*=   a *= b   a = a * b
/=   a /= b   a = a / b
%=   a %= b   a = a % b
**=  a **= b  a = a ** b
//=  a //= b  a = a // b
"""


"""
if 语句
格式：
if 表达式：
    语句#四格缩进
    
逻辑：当程序执行到if语句时，首先计算“表达式”的值，
如果表达式的值为真，则执行if下的语句
如果表达式的值为假，则跳过整个if语句向下执行

何为真假：
假：0,  0.0，  ""   None    False
真：其余为真
"""
"""
if-else语句
if 表达式:
    语句1
else:
    语句2
    
逻辑：当程序执行到if-else语句时，首先计算表达式的值，如果
表达式的值为真，则执行语句1，执行完语句1，跳出整个if-else语句
如果表达式的值为假，则执行，执行语句2，然后跳出if-else语句
"""

"""
位运算符：按位运算符是把数字看做二进制数来计算
"""
# & 按位与运算符
print(5 & 7)
5101
7111
1&1=1
1&0=0
#相应的位数为1，则该位为1，否则为0.

# | 按位或运算符
print(5 | 7)
#相应的位有一个为1时，结果为1

# ^ 按位异或运算符
print(5 ^ 7)
#二进制两位相异时，结果为1

# ~ 按位取反运算符
print(~5)#输出为-6
#每个二进制数据位取反
"""
00000000000000000000000000000101 5原码
11111111111111111111111111111010 ~5的补码（计算机存储的是补码，计算出来得到数据的补码，求原码）
10000000000000000000000000000101 ~5反码（数据位不变其他位取反）
10000000000000000000000000000110 ~5的原码（1代表负数，-6）
"""
# << 左移动运算符
#各二进制位全部左移若干位，由右侧的数字决定，高位丢去，低位补0
print(2 << 2)
#2-00000010
#2<<2-00001000--8

# >> 右移动运算符
#各二进制位全部右移若干位，由右侧的数字决定，低位丢去，高位补0
print(13 >> 2)
#13--0000001101
#3---0000000011



"""
关系运算符和关系运算表达式
==   !=   >   <    >=     <=

关系运算表达式：1 + 2 > 3 + 4
格式： 表达式1  关系运算符   表达式2
功能：计算表达式1和表达式2的值
值:如果关系成立，结果为True真，否则为假
"""

"""
逻辑运算符
逻辑与  and
逻辑与运算表达式：表达式1 and 表达式2
值：真 and 真 ---- 真
    真 and 假 ---- 假
    假 and 真 ---- 假
    假 and 假 ---- 假
全真为真，有假为假

"""
num1 = 10
num2 = 20
if num1 and num2
    print("$$$$")

"""

逻辑或： or
表达式： 表达式1 or 表达式2
值：真 or 真----真
    真 or 假----真
    假 or 真----真
    假 or 假----假
有真为真
""""
num1 = 0
num2 = 1
if num1 or num2:
    print("&&&&")

"""
逻辑非： not
表达式:  not 表达式
         not 真---假
         not 假---真
颠倒黑白 
"""
if not 1:
    print("$$$$$")#不打印
if not 0:
    print("#####")#打印


"""
成员运算符：
in ：如果在指定的序列中找到值，返回True，否则返回False
not in：如果在指定的序列中没有找到值，返回True，否则返回False
"""
"""
身份运算符
is：判断两个标识符是不是引用同一个对象
is not：判断两个标识符是不是引用不同的对象

"""


"""
运算符优先级：
**
~ + -(正负号）
* / % //
+ -（加减）
>>   <<
&
^ |
<  <=  >  >=
==  !=
=  +=  -=  %=  //=
is   is ont
in   not in 
not  or  and
"""

"""
#短路原则
表达式1 and 表达式2 and 表达式3 ····· and 表达式n
当表达式1为真时，计算表达式2，如果表达式2为假则停止计算
有一个为假则为假

表达式1 or 表达式2 or 表达式3 ······ and 表达式n
当表达式1为假时，计算表达式2，当表达式2为真时，停止计算
有一个为真则为真

""""






